const { EmbedBuilder } = require('discord.js');
const antilink = require('../models/antilinkSchema');
const deletedCounts = new Map();
/**
 * 
 * @param {import('discord.js').Client} client 
 */
module.exports = async (client) => {
    client.on('messageCreate', async (message) => {

        if (message.author.bot) return;

        const bannedKeywords = ['Onlyfans', 'Onlyfan', 'discord.gg/', 'Nude', 'üîû', ':underage:', 'Porn', 'sex', 'üçë', 'leaks', 'steam', 'from', 'gift', '50$'];
        const notifyChannelId = '1261448652782571521';

        const db = await antilink.findOne({ guildId: message.guild?.id });

        // Ki·ªÉm tra xem ch·ª©c nƒÉng ƒë√£ ƒë∆∞·ª£c b·∫≠t hay kh√¥ng
        if (db && db.enabled === false) return;
        if (!message.guild.members.me.permissions.has(["BanMembers", "ManageMessages"])) return; 


        // L·∫•y ho·∫∑c t·∫°o s·ªë l·∫ßn tin nh·∫Øn b·ªã xo√° c·ªßa ng∆∞·ªùi d√πng
        let userDeletedCount = deletedCounts.get(message.author.id) || 0;

        let bannedKeywordCount = 0;
        bannedKeywords.forEach(keyword => {
            if (message.content.toLowerCase().includes(keyword.toLowerCase())) {
                bannedKeywordCount++;
            }
        });

        if (bannedKeywordCount >= 3) {
            userDeletedCount++;
            deletedCounts.set(message.author.id, userDeletedCount);

            if (userDeletedCount >= 10) {
                try {
                    // Ban ng∆∞·ªùi d√πng
                    await message.guild.members.ban(message.author.id, { reason: 'Spamming inappropriate content' });

                    // G·ª≠i th√¥ng b√°o cho ng∆∞·ªùi d√πng
                    const user = client.users.cache.get(message.author.id);
                    if (user) {
                        const embed = new EmbedBuilder()
                            .setDescription(`‚ö†Ô∏è ${message.author} b·ªã ban kh·ªèi server ${message.guild.name} v√¨ spam tin nh·∫Øn kh√¥ng ph√π h·ª£p.`);
                        await user.send({ embeds: [embed] }).catch(error => console.error(`L·ªói khi g·ª≠i log: ${error}`));
                    }

                    // G·ª≠i th√¥ng b√°o v√†o k√™nh c·ª• th·ªÉ
                    const channelsend = message.guild.channels.cache.get(db.channelId);
                    if (channelsend) {
                        const embed = new EmbedBuilder()
                            .setDescription(`‚ö†Ô∏è ${message.author} ƒë√£ b·ªã ban kh·ªèi server v√¨ spam tin nh·∫Øn kh√¥ng ph√π h·ª£p | Anti Link 18+ Banned`);
                        await channelsend.send({ embeds: [embed] }).catch(error => console.error(`L·ªói khi g·ª≠i log: ${error}`));
                        deletedCounts.delete(message.author.id);
                    }
                } catch (error) {
                    console.error(`Failed to ban user: ${error}`);
                }
            }

            try {
                await message.delete().catch(error => console.error(`L·ªói khi xo√° xin nh·∫Øn: ${error}`));

                const notifyChannel = client.guilds.cache.get("896744428100804688").channels.cache.get(notifyChannelId);
                if (notifyChannel) {
                    const embed = new EmbedBuilder()
                        .setDescription(`‚ö†Ô∏è **1 Tin nh·∫Øn 18+ v·ª´a b·ªã lo·∫°i b·ªè t·∫°i ${message.channel.name}** ‚ö†Ô∏è\n\n**User:** ${message.author}\n**N·ªôi dung:** ${message.content}\n**Guild:** ${message.guild.name}`);
                    await notifyChannel.send({ embeds: [embed] }).catch(error => console.error(`L·ªói khi g·ª≠i log: ${error}`));
                }

                if (db && db.channelId) {
                    const channelsend = message.guild.channels.cache.get(db.channelId);
                    if (channelsend) {
                        const eb = new EmbedBuilder()
                            .setDescription(`‚ö†Ô∏è **1 Tin nh·∫Øn 18+ v·ª´a b·ªã lo·∫°i b·ªè t·∫°i ${message.channel.name}** ‚ö†Ô∏è\n\n**User:** ${message.author}\n**N·ªôi dung:** ${message.content}\n**Guild:** ${message.guild.name}`);
                        await channelsend.send({ embeds: [eb] });
                    }
                }
            } catch (error) {
                console.error(`Failed to send notification: ${error}`);
            }
        }
    });
};
